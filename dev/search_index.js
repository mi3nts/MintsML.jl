var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = mintsML","category":"page"},{"location":"#mintsML","page":"Home","title":"mintsML","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for mintsML.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [mintsML]","category":"page"},{"location":"#mintsML.getFeatureImportances-NTuple{4, Any}","page":"Home","title":"mintsML.getFeatureImportances","text":"getFeatureImportances(Xtest, mach, sample_size, min_allowed)\n\nGet ranked feature importances using the mean absolute Shap value. Returns a sorted DataFrame with all features with relative importance above min_allowed\n\n\n\n\n\n","category":"method"},{"location":"#mintsML.predict_function-Tuple{Any, Any}","page":"Home","title":"mintsML.predict_function","text":"predict_function(model, data)\n\nA wrapper function that takes a trained MLJ model model and a DataFrame data of model features. The function returns a single column DataFrame with prediction values.\n\n\n\n\n\n","category":"method"},{"location":"#mintsML.quantilequantile-NTuple{4, Any}","page":"Home","title":"mintsML.quantilequantile","text":"qunatilequantile(y, ŷ, ytest, ŷtest; kwargs...)\n\nCreate a quantile-qunatile plot of training and testing data.\n\n\n\n\n\n","category":"method"},{"location":"#mintsML.r²-Tuple{Any, Any}","page":"Home","title":"mintsML.r²","text":"Compute the r² value between two vectors.\n\n\n\n\n\n","category":"method"}]
}
